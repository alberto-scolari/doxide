version: 2.1

executors:

  linux:
    machine:
      image: ubuntu-2204:current
    resource_class: medium

  mac:
    macos:
      xcode: 16.0.0
    resource_class: macos.m1.medium.gen1
    environment:
      CPATH: /opt/homebrew/include
      LIBRARY_PATH: /opt/homebrew/lib

  win:
    machine:
      image: 'windows-server-2022-gui:current'
      shell: powershell.exe -ExecutionPolicy Bypass
    resource_class: 'windows.medium'
    environment:
      CXXFLAGS: /I "c:\ProgramData\chocolatey\include"
      LDFLAGS: /LIBPATH:"c:\ProgramData\chocolatey\lib"
      CMAKE_GENERATOR: Visual Studio 17 2022
      CMAKE_GENERATOR_PLATFORM: x64

commands:

  test:
    steps:
      - run:
          name: Test
          command: |
            doxide build
            doxide cover > cover.json
            mkdocs build
            mkdir hello
            cd hello
            doxide init

jobs:

  linux:
    executor: linux
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive --depth 1
      - run:
          name: Install dependencies
          command: |
            sudo apt update --assume-yes
            sudo apt install --assume-yes --no-install-recommends \
              cmake \
              g++ \
              lcov \
              libyaml-dev \
              libcli11-dev \
              libicu-dev
            sudo pip3 install mkdocs mkdocs-material mkdocs-material[imaging]
      - run:
          name: Build
          command: |
              mkdir build
              cd build
              cmake ..
              cmake --build . --config Debug --parallel
              sudo cmake --install . --config Debug
      - test

  mac:
    executor: mac
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive --depth 1
      - run:
          name: Install dependencies
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install \
              cmake \
              libyaml \
              cli11 \
              cairo
            pip3 install mkdocs mkdocs-material mkdocs-material[imaging]
      - run:
          name: Build
          command: |
              mkdir build
              cd build
              cmake ..
              cmake --build . --config Debug --parallel
              sudo cmake --install . --config Debug
      - test

  win:
    executor: win
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive --depth 1
      - run:
          name: Install dependencies
          command: |
            choco install -y cmake.portable python sudo
            pip3 install mkdocs mkdocs-material mkdocs-material[imaging]
            cd contrib\libyaml
            mkdir build
            cd build
            cmake .. -DCMAKE_INSTALL_PREFIX=c:\ProgramData\chocolatey
            cmake --build . --config Debug --parallel
            sudo cmake --install . --config Debug
      - run:
          name: Build
          command: |
              mkdir build
              cd build
              cmake .. -DCMAKE_INSTALL_PREFIX=c:\ProgramData\chocolatey
              cmake --build . --config Debug --parallel
              sudo cmake --install . --config Debug
      - test

  deploy:
    executor: linux
    steps:
      - run:
          name: Trigger package update
          command: |
              curl -X POST https://circleci.com/api/v2/project/gh/lawmurray/download.indii.org/pipeline \
                --header "Circle-Token: $CIRCLE_TOKEN" \
                --header "content-type: application/json" \
                --data '{"branch": "main"}'

workflows:

  version: 2
  all:
    jobs:
      - linux
      - mac
      - win
      - deploy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
